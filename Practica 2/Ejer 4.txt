import string

evaluar = """ título: Experiences in Developing a Distributed Agent-based Modeling Toolkit with Python
resumen: Distributed agent-based modeling (ABM) on high-performance computing resources provides the promise of capturing unprecedented details of large-scale complex systems. However, the specialized knowledge required for developing such ABMs creates barriers to wider adoption and utilization. Here we present our experiences in developing an initial implementation of Repast4Py, a Python-based distributed ABM toolkit. We build on our experiences in developing ABM toolkits, including Repast for High Performance Computing (Repast HPC), to identify the key elements of a useful distributed ABM toolkit. We leverage the Numba, NumPy, and PyTorch packages and the Python C-API to create a scalable modeling system that can exploit the largest HPC resources and emerging computing architectures.
"""

#======================================================================
#---------------------Contar palabras del título

titulo = evaluar.split("\n")[0].split() #Separo el título del resumen y lo divido en palabras
titulo.pop(0) #Con esto no cuento la palabra "titulo:"
print ("título: ok" if len(titulo) <= 10 else "titulo: incorrecto")



#======================================================================
#---------------------Contar palabras de cada oración

resumen=  evaluar.split("\n")[1].split(". ") #Divido el resumen por oraciones
resumen_palabras = []
for elem in range(len(resumen)):
    resumen_palabras.append(resumen[elem].split()) #Creo una lista de listas, en el que cada elemento son las palabras de cada oración

resumen_palabras[0].pop(0)

facil = 0
aceptable = 0
dificil = 0 
muy_dificil = 0

for elem in resumen_palabras:
    if len(elem) <= 12:
        facil= facil + 1
    elif len(elem) <= 17:
        aceptable = aceptable + 1
    elif len(elem) <= 25:
        dificil = dificil + 1
    else:
        muy_dificil = muy_dificil + 1

print (f"Cantidad de oraciones fáciles de leer: {facil}, aceptables para leer: {aceptable}, dificil de leer: {dificil}, muy difícil de leer: {muy_dificil}")
print ("(SIN CONTAR EL TÍTULO)")







